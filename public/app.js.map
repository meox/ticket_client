{"version":3,"sources":["app/app.js","app/initialize.js"],"names":["App","console","log","socket","logger","kind","msg","data","connect","onOpen","onError","ev","onClose","e","chan","channel","join","receive","on","i","length","document","addEventListener","window","mychannel","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEMA,G;;;;;;;2BAES;AACXC,cAAQC,GAAR,CAAY,OAAZ;AACA,UAAIC,SAAS,oBAAW,4BAAX,EAAyC;AACpDC,gBAAS,gBAACC,IAAD,EAAOC,GAAP,EAAYC,IAAZ,EAAqB;AAC5B,cAAIF,SAAS,SAAb,EACEJ,QAAQC,GAAR,CAAeG,IAAf,UAAwBC,GAAxB,EAA+BC,IAA/B;AACH;AAJmD,OAAzC,CAAb;;AAOAJ,aAAOK,OAAP;;AAEAL,aAAOM,MAAP,CAAe,cAAM;AACnBR,gBAAQC,GAAR,CAAY,MAAZ;AACD,OAFD;;AAIAC,aAAOO,OAAP,CAAgB;AAAA,eAAMT,QAAQC,GAAR,CAAY,OAAZ,EAAqBS,EAArB,CAAN;AAAA,OAAhB;AACAR,aAAOS,OAAP,CAAgB;AAAA,eAAKX,QAAQC,GAAR,CAAY,OAAZ,EAAqBW,CAArB,CAAL;AAAA,OAAhB;;AAEA,UAAIC,OAAOX,OAAOY,OAAP,CAAe,eAAf,EAAgC,EAAhC,CAAX;AACAD,WAAKE,IAAL,GAAYC,OAAZ,CAAoB,QAApB,EAA8B;AAAA,eAAMhB,QAAQC,GAAR,CAAY,YAAZ,CAAN;AAAA,OAA9B,EACYe,OADZ,CACoB,IADpB,EAC0B;AAAA,eAAMhB,QAAQC,GAAR,CAAY,SAAZ,CAAN;AAAA,OAD1B;;AAGAY,WAAKJ,OAAL,CAAa;AAAA,eAAKT,QAAQC,GAAR,CAAY,sBAAZ,EAAoCW,CAApC,CAAL;AAAA,OAAb;AACAC,WAAKF,OAAL,CAAa;AAAA,eAAKX,QAAQC,GAAR,CAAY,gBAAZ,EAA8BW,CAA9B,CAAL;AAAA,OAAb;;AAEAC,WAAKI,EAAL,CAAQ,QAAR,EAAkB,eAAO;AACvB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIb,IAAIC,IAAJ,CAASa,MAA7B,EAAqCD,GAArC;AACElB,kBAAQC,GAAR,CAAYI,IAAIC,IAAJ,CAASY,CAAT,CAAZ;AADF;AAED,OAHD;;AAKA,aAAOL,IAAP;AACD;;;;;;kBAGYd,G;;;;;;ACtCf;;;;;;AAEAqB,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDrB,UAAQC,GAAR,CAAY,iBAAZ;AACAqB,SAAOC,SAAP,GAAmB,cAAIC,IAAJ,EAAnB;AACD,CAHD","file":"public/app.js","sourcesContent":["import {Socket, LongPoller} from \"phoenix\"\n\nclass App {\n\n  static init(){\n    console.log(\"Hello\");\n    let socket = new Socket(\"ws://127.0.0.1:4000/socket\", {\n      logger: ((kind, msg, data) => {\n        if (kind !== \"receive\")\n          console.log(`${kind}: ${msg}`, data)\n      })\n    })\n\n    socket.connect()\n\n    socket.onOpen( ev => {\n      console.log(\"OPEN\")\n    })\n\n    socket.onError( ev => console.log(\"ERROR\", ev) )\n    socket.onClose( e => console.log(\"CLOSE\", e))\n\n    var chan = socket.channel(\"tickets:lobby\", {})\n    chan.join().receive(\"ignore\", () => console.log(\"auth error\"))\n               .receive(\"ok\", () => console.log(\"join ok\"))\n\n    chan.onError(e => console.log(\"something went wrong\", e))\n    chan.onClose(e => console.log(\"channel closed\", e))\n\n    chan.on(\"ticket\", msg => {\n      for (let i = 0; i < msg.data.length; i++)\n        console.log(msg.data[i])\n    })\n\n    return chan\n  }\n}\n\nexport default App\n","import App from \"app.js\"\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Initialized app');\n  window.mychannel = App.init();\n});\n\n"]}